<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on PrestaShop Developers&#39; blog</title>
    <link>https://build.prestashop-project.org/tag/git/</link>
    <description>Recent content in git on PrestaShop Developers&#39; blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 May 2023 00:00:00 +0200</lastBuildDate><atom:link href="https://build.prestashop-project.org/tag/git/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PrestaShop ZIP archives repository is available</title>
      <link>https://build.prestashop-project.org/news/2023/we-publish-old-zip-archives/</link>
      <pubDate>Wed, 31 May 2023 00:00:00 +0200</pubDate>
      
      <guid>https://build.prestashop-project.org/news/2023/we-publish-old-zip-archives/</guid>
      <description>In order to make sure old release packages remain available for anyone who needs them, we published a new GitHub repository &amp;ldquo;ZIP Archives&amp;rdquo;, which aims to store all published PrestaShop ZIP archives.
Keeping trace of the past All the past versions of PrestaShop that the team could get their hands on were added to the repository since version 1.0.0.0.
Past versions of the software can be useful for developers who have to intervene on a PrestaShop application running an old version, for example, to perform maintenance or upgrade.</description>
    </item>
    
    <item>
      <title>How to rebase your Git branch</title>
      <link>https://build.prestashop-project.org/howtos/misc/rebasing-your-git-branch/</link>
      <pubDate>Thu, 11 May 2017 09:10:11 +0200</pubDate>
      
      <guid>https://build.prestashop-project.org/howtos/misc/rebasing-your-git-branch/</guid>
      <description>Contributing code to PrestaShop can be scary for first-timers, because not everyone knows how Git works. By the time you have figured how to properly push your changes to GitHub, the codebase has changed, rendering your suggestions impossible to merge &amp;ndash; leading to frustration on both sides. It&amp;rsquo;s high time you learn about git rebase.
Files often change an Open Source project. Between the time you fix an issue and create a pull request, and the time a Core developer takes a look at your PR, the target files can have changed a couple times (or more).</description>
    </item>
    
    <item>
      <title>Set up your Git for contributing</title>
      <link>https://build.prestashop-project.org/howtos/misc/set-up-your-git-for-contributing/</link>
      <pubDate>Thu, 30 Jul 2015 11:21:00 +0200</pubDate>
      
      <guid>https://build.prestashop-project.org/howtos/misc/set-up-your-git-for-contributing/</guid>
      <description>Any open source project comes with its own set of rules to harmonize everybody&amp;rsquo;s contributions. Usually the guidelines are described in a CONTRIBUTING.md file inside the project root directory.
To follow these guidelines, you often need to adapt your development environment. You will find here all you need to know to set up your development environment! This will help your contribution get validated more quickly and without further modifications.
We&amp;rsquo;ll be talking about working with the PrestaShop project, but what you&amp;rsquo;ll read here applies to most PHP open source projects.</description>
    </item>
    
    <item>
      <title>Create the perfect .gitignore file for your PrestaShop projects</title>
      <link>https://build.prestashop-project.org/howtos/misc/prestashop-perfect-gitignore/</link>
      <pubDate>Mon, 20 Apr 2015 11:21:00 +0200</pubDate>
      
      <guid>https://build.prestashop-project.org/howtos/misc/prestashop-perfect-gitignore/</guid>
      <description>As a serious developer, you need to use versioning (or &amp;ldquo;revision control&amp;rdquo;) for your projects, in order to track changes to your files&amp;hellip; and be able to travel back in time when a disaster happens. There are many CVS (Concurrent Versions System) available out there today, but Git is by far the most popular in 2015, and one of the most used in the Open Source world, right behind Subversion (svn).</description>
    </item>
    
  </channel>
</rss>
